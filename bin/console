#!/usr/bin/env php
<?php

require_once __DIR__ . '/../vendor/autoload.php';
use App\KeyValueStoreArray;

echo "Start store in array with [\'a\'=>\'a_value\', \'b\'=>\'b_value\', \'c\'=>\'c_value\'] \n";
echo "---------------------------------------------------------------------------------------\n";

$storeArr = new KeyValueStoreArray(['a'=>'a_value', 'b'=>'b_value', 'c'=>'c_value']);
//$storeArr = new KeyValueStoreArray(1);


echo "Get value for all exists keys \n";
echo "-----------------------------------\n";
print($storeArr->get('a') . "\n");
print($storeArr->get('b') . "\n");
print($storeArr->get('c') . "\n");

echo "\n";
echo "Get value for non-exists key 'd' \n";
echo "-----------------------------------\n";
var_dump($storeArr->get('d'));

echo "\n";
echo "Check keys 'a' and 'd' in array \n";
echo "-----------------------------------\n";
var_dump($storeArr->has('a'));
var_dump($storeArr->has('d'));

echo "\n";
echo "Set value 'd_value' with key = 'd' and change value to 'new_a' with key 'a' \n";
echo "-----------------------------------\n";
$storeArr->set('a', 'new_a');
$storeArr->set('d', 'd_value');
print($storeArr->get('a') . "\n");
print($storeArr->get('d') . "\n");

echo "\n";
echo "Clear array and get values \n";
echo "-----------------------------------\n";
$storeArr->clear();
var_dump($storeArr->get('a'));
var_dump($storeArr->get('b'));
var_dump($storeArr->get('c'));
var_dump($storeArr->get('d'));

echo "\n";
echo "Complete store in array with [\'a\'=>\'a_value\', \'b\'=>\'b_value\', \'c\'=>\'c_value\'] \n";
echo "---------------------------------------------------------------------------------------\n";

echo "\n";
echo "Start store in JSON-file with './data/data.json' \n";
echo "---------------------------------------------------------------------------------------\n";

$storeJSON = new \App\KeyValueStoreJSON('./data/data.json');

echo "Get value for all exists keys \n";
echo "-----------------------------------\n";
print($storeJSON->get('a') . "\n");
print($storeJSON->get('b') . "\n");
print($storeJSON->get('c') . "\n");

echo "\n";
echo "Get value for non-exists key 'd' \n";
echo "-----------------------------------\n";
var_dump($storeJSON->get('d'));

echo "\n";
echo "Check keys 'a' and 'd' in array \n";
echo "-----------------------------------\n";
var_dump($storeJSON->has('a'));
var_dump($storeJSON->has('d'));

echo "\n";
echo "Set value 'd_value' with key = 'd' and change value to 'new_a' with key 'a' \n";
echo "-----------------------------------\n";
$storeJSON->set('a', 'new_a');
$storeJSON->set('d', 'd_value');
print($storeJSON->get('a') . "\n");
print($storeJSON->get('d') . "\n");

echo "\n";
echo "Clear array and get values \n";
echo "-----------------------------------\n";
$storeJSON->clear();
var_dump($storeJSON->get('a'));
var_dump($storeJSON->get('b'));
var_dump($storeJSON->get('c'));
var_dump($storeJSON->get('d'));

echo "\n";
echo "Set file to init state \n";
echo "-----------------------------------\n";
$storeJSON->set('a', 'a_value');
$storeJSON->set('b', 'b_value');
$storeJSON->set('c', 'c_value');

echo "\n";
echo "Complete store in JSON-file \n";
echo "---------------------------------------------------------------------------------------\n";

echo "\n";
echo "Start store in YAML-file with './data/data.yaml' \n";
echo "---------------------------------------------------------------------------------------\n";

$storeYAML = new \App\KeyValueStoreYAML('./data/data.yml');

echo "Get value for all exists keys \n";
echo "-----------------------------------\n";
print($storeYAML->get('a') . "\n");
print($storeYAML->get('b') . "\n");
print($storeYAML->get('c') . "\n");

echo "\n";
echo "Get value for non-exists key 'd' \n";
echo "-----------------------------------\n";
var_dump($storeYAML->get('d'));

echo "\n";
echo "Check keys 'a' and 'd' in array \n";
echo "-----------------------------------\n";
var_dump($storeYAML->has('a'));
var_dump($storeYAML->has('d'));

echo "\n";
echo "Set value 'd_value' with key = 'd' and change value to 'new_a' with key 'a' \n";
echo "-----------------------------------\n";
$storeYAML->set('a', 'new_a');
$storeYAML->set('d', 'd_value');
print($storeYAML->get('a') . "\n");
print($storeYAML->get('d') . "\n");

echo "\n";
echo "Clear array and get values \n";
echo "-----------------------------------\n";
$storeYAML->clear();
var_dump($storeYAML->get('a'));
var_dump($storeYAML->get('b'));
var_dump($storeYAML->get('c'));
var_dump($storeYAML->get('d'));

echo "\n";
echo "Set file to init state \n";
echo "-----------------------------------\n";
$storeYAML->set('a', 'a_value');
$storeYAML->set('b', 'b_value');
$storeYAML->set('c', 'c_value');

echo "\n";
echo "Complete store in YAML-file \n";
echo "---------------------------------------------------------------------------------------\n";
